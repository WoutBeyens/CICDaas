name: Workflow Main
on: workflow_dispatch
 
jobs:
  build-correct-application:
    name: Build correct application based on input (programming language)
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Build Go-application
      uses: WoutBeyens/CICDaas@v14
      with:
        type: 'go'
        dockerUsername: ${{ secrets.acr_myacr4568975_username }}
        dockerPassword: ${{ secrets.acr_myacr4568975_password }}
        kubeConfig: ${{ secrets.aks_devopsclusteraks_kubeConfig }}
        deploymentManifest: goDeployment
        serviceManifest: goService
        namespace: goNamespace

    - name: Build PHP-application
      uses: WoutBeyens/CICDaas@v14
      with:
        type: 'php'
        dockerUsername: ${{ secrets.acr_myacr4568975_username }}
        dockerPassword: ${{ secrets.acr_myacr4568975_password }}
        kubeConfig: ${{ secrets.aks_devopsclusteraks_kubeConfig }}
        deploymentManifest: phpDeployment
        serviceManifest: phpService
        namespace: phpNamespace

    - name: Build .NET application
      uses: WoutBeyens/CICDaas@v14
      with:
        type: 'dotnet'
        dockerUsername: ${{ secrets.acr_myacr4568975_username }}
        dockerPassword: ${{ secrets.acr_myacr4568975_password }}
        kubeConfig: ${{ secrets.aks_devopsclusteraks_kubeConfig }}
        deploymentManifest: dotnetDeployment
        serviceManifest: dotnetService
        namespace: dotnetNamespace
        
    ## --- Vulnerability scanning Go-applicatie --- #

    - name: Go - Checkout code before vulnerability scan
      uses: actions/checkout@v2
      
    - name: Go - Build an image from Dockerfile for vulnerability scan
      run: |
         docker build "$GITHUB_WORKSPACE/website" -f  "website/Dockerfile" -t myacr4568975.azurecr.io/go:${{ github.sha }} --label dockerfile-path=website/Dockerfile
      
    - name: Go - Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'myacr4568975.azurecr.io/go:${{ github.sha }}'
        format: 'table'
        exit-code: '0'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'    

    ## --- Vulnerability scanning PHP-applicatie --- #

    - name: PHP - Checkout code before vulnerability scan
      uses: actions/checkout@v2
      
    - name: PHP - Build an image from Dockerfile for vulnerability scan
      run: |
         docker build "$GITHUB_WORKSPACE/guestbook/php-redis" -f  "guestbook/php-redis/Dockerfile" -t myacr4568975.azurecr.io/php:${{ github.sha }} --label dockerfile-path=guestbook/php-redis/Dockerfile
      
    - name: PHP - Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'myacr4568975.azurecr.io/php:${{ github.sha }}'
        format: 'table'
        exit-code: '0'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'  

    ## --- Vulnerability scanning .NET-applicatie --- #

    - name: Dotnet - Checkout code before vulnerability scan
      uses: actions/checkout@v2
      
    - name: Dotnet - Build an image from Dockerfile for vulnerability scan
      run: |
         docker build "$GITHUB_WORKSPACE/voting-app" -f  "voting-app/Dockerfile" -t myacr4568975.azurecr.io/dotnet:${{ github.sha }} --label dockerfile-path=voting-app/Dockerfile
      
    - name: Dotnet - Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'myacr4568975.azurecr.io/dotnet:${{ github.sha }}'
        format: 'table'
        exit-code: '0'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'  